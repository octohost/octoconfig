#!/usr/bin/env ruby
require 'gli'
require 'octoconfig'

include GLI::App

program_desc 'Help to setup octohost daemons through data elsewhere.'

version Octoconfig::VERSION

desc 'Verbose.'
switch [:v,:verbose]

desc 'Configuration to update.'
default_value 'proxy'
arg_name 'daemon'
flag [:d,:daemon]

desc 'Command to get the service catalog.'
default_value '/usr/bin/octo services:catalog'
arg_name 'services'
flag [:s,:services]

desc 'Command to reload the daemon.'
default_value 'service proxy reload'
arg_name 'reload'
flag [:r,:reload]

desc 'Update the config for a {daemon}'
arg_name 'update'
command :update do |c|

  c.action do |global_options,options,args|

    # Get the services.

    # Update the config.

    # Restart the daemon.

    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "update command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
